using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace crudOperation
{
    class Program
    {
        static void Main(string[] args)
        {

            Stock s = new Stock();
            //s.insertrecordThroughSP();
             //s.updaterecordThrough();
            //s.deleterecordThrough();
            s.Datashow();
			
			PriceHistory p=new PriceHistory();
			//p.insertrecordThroughSP();
             //p.updaterecordThrough();
            //p.deleterecordThrough();
            p.Datashow();
           
        }
    }
	public class Stock
	{
	public void insertrecordThroughSP()
        {

            SqlConnection sqlcon = new SqlConnection(ConfigurationManager.ConnectionStrings["StockConnection"].ToString());


            string query = "insertdata";
            SqlCommand cmd = new SqlCommand(query, sqlcon);
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.Add("@stockId", SqlDbType.Int).Value = 0;
            cmd.Parameters.Add("@stockSymbol", SqlDbType.VarChar).Value = "APPL";
            cmd.Parameters.Add("@stockName", SqlDbType.VarChar).Value = "Apple inc.";
            cmd.Parameters.Add("@createdOn", SqlDbType.DateTime).Value = DateTime.Now;

            sqlcon.Open();
            int rowaffected = cmd.ExecuteNonQuery();
            sqlcon.Close();
            
        }
        public void updaterecordThrough()
        {
            SqlConnection sqlcon = new SqlConnection(ConfigurationManager.ConnectionStrings["StockConnection"].ToString());

            //string query = "update Stocks set stockSymbol='FB',stockName='Facebook inc.' where stockId=3";

            string updatequery = "updatedata";
            SqlCommand cmd = new SqlCommand(updatequery, sqlcon);

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.Add("@stockId", SqlDbType.Int).Value = 0;
            cmd.Parameters.Add("@stockSymbol", SqlDbType.VarChar).Value = "fb";
            cmd.Parameters.Add("@stockName", SqlDbType.VarChar).Value ="facebook" ;
            cmd.Parameters.Add("@createdOn", SqlDbType.DateTime).Value = DateTime.Now;

            sqlcon.Open();
            int rowaffected = cmd.ExecuteNonQuery();
            sqlcon.Close();
             
        }
        public void deleterecordThrough()
        {
            SqlConnection sqlcon = new SqlConnection(ConfigurationManager.ConnectionStrings["StockConnection"].ToString());

            //string query = "delete from Stocks where stockId=10";

            string deletequery = "deletedata";
            SqlCommand cmd = new SqlCommand(deletequery, sqlcon);

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.Add("@stockId", SqlDbType.Int).Value = 10;



            sqlcon.Open();
            int rowaffected = cmd.ExecuteNonQuery();
            sqlcon.Close();
          }

        public void Datashow()
        {
            SqlConnection sqlcon = new SqlConnection(ConfigurationManager.ConnectionStrings["StockConnection"].ToString());

            string query = "select stockSymbol,stockName from Stocks";
            SqlCommand cmd = new SqlCommand(query, sqlcon);
            sqlcon.Open();
            SqlDataReader read = cmd.ExecuteReader();
            
            
                while (read.Read())
                {
                    Console.WriteLine("{0} {1}", read.GetString(0), read.GetString(1));

                }
            
            read.Close();
            Console.ReadKey();

        }

	}
	
	public class PriceHistory{
	public void insertrecordThroughSP()
        {
            SqlConnection sqlcon = new SqlConnection(ConfigurationManager.ConnectionStrings["StockConnection"].ToString());

            string query = "insertPriceData";
            SqlCommand cmd = new SqlCommand(query, sqlcon);
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.Add("@priceId", SqlDbType.Int).Value = 0;
            cmd.Parameters.Add("@stockId", SqlDbType.Int).Value = 1;
            cmd.Parameters.Add("@openPrice", SqlDbType.Decimal).Value = 100.00;
            cmd.Parameters.Add("@highPrice", SqlDbType.Decimal).Value = 110.00;
            cmd.Parameters.Add("@lowPrice", SqlDbType.Decimal).Value = 95.00;
            cmd.Parameters.Add("@closePrice", SqlDbType.Decimal).Value = 105.00;
            cmd.Parameters.Add("@createdOn", SqlDbType.DateTime).Value = DateTime.Now;

            sqlcon.Open();
            int rowaffected = cmd.ExecuteNonQuery();
            sqlcon.Close();
        }

        public void updaterecordThrough()
        {
            SqlConnection sqlcon = new SqlConnection(ConfigurationManager.ConnectionStrings["StockConnection"].ToString());

            string updatequery = "updatePriceData";
            SqlCommand cmd = new SqlCommand(updatequery, sqlcon);

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.Add("@priceId", SqlDbType.Int).Value = 1;
            cmd.Parameters.Add("@stockId", SqlDbType.Int).Value = 1;
            cmd.Parameters.Add("@openPrice", SqlDbType.Decimal).Value = 105.00;
            cmd.Parameters.Add("@highPrice", SqlDbType.Decimal).Value = 115.00;
            cmd.Parameters.Add("@lowPrice", SqlDbType.Decimal).Value = 100.00;
            cmd.Parameters.Add("@closePrice", SqlDbType.Decimal).Value = 110.00;
            cmd.Parameters.Add("@createdOn", SqlDbType.DateTime).Value = DateTime.Now;

            sqlcon.Open();
            int rowaffected = cmd.ExecuteNonQuery();
            sqlcon.Close();
        }

        public void deleterecordThrough()
        {
            SqlConnection sqlcon = new SqlConnection(ConfigurationManager.ConnectionStrings["StockConnection"].ToString());

            string deletequery = "deletePriceData";
            SqlCommand cmd = new SqlCommand(deletequery, sqlcon);

            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            cmd.Parameters.Add("@priceId", SqlDbType.Int).Value = 1;

            sqlcon.Open();
            int rowaffected = cmd.ExecuteNonQuery();
            sqlcon.Close();
        }

        public void Datashow()
        {
            SqlConnection sqlcon = new SqlConnection(ConfigurationManager.ConnectionStrings["StockConnection"].ToString());

            string query = "select openPrice, highPrice, lowPrice, closePrice from PriceHistory";
            SqlCommand cmd = new SqlCommand(query, sqlcon);
            sqlcon.Open();
            SqlDataReader read = cmd.ExecuteReader();

            while (read.Read())
            {
                Console.WriteLine("Open Price: {0}, High Price: {1}, Low Price: {2}, Close Price: {3}",
                    read.GetDecimal(0), read.GetDecimal(1), read.GetDecimal(2), read.GetDecimal(3));
            }

            read.Close();
            Console.ReadKey();
        }
	
	}
   
}
public void updaterecordThrough()
            {
                SqlConnection sqlcon1 = new SqlConnection(ConfigurationManager.ConnectionStrings["StockConnection"].ToString());

            //string query = "update Stocks set stockSymbol='FB',stockName='Facebook inc.' where stockId=3";
            
                Console.WriteLine("Enter id for update record");
                int stokid =Convert.ToInt32(Console.ReadKey());
                SqlCommand cmd1 = new SqlCommand("update Stock stockSymbol='FB',stockName='Facebook inc.' where stockId=stockid", sqlcon1, @id);
                cmd1.Parameters.AddWithValue("@id", stokid);
                //cmd.CommandType = System.Data.CommandType.StoredProcedure;
                //cmd.Parameters.Add("@stockId", SqlDbType.Int).Value = 0;
                //cmd.Parameters.Add("@stockSymbol", SqlDbType.VarChar).Value = "fb";
                //cmd.Parameters.Add("@stockName", SqlDbType.VarChar).Value = "facebook";
                //cmd.Parameters.Add("@createdOn", SqlDbType.DateTime).Value = DateTime.Now;

                sqlcon1.Open();
                int rowaffected = cmd1.ExecuteNonQuery();
                sqlcon1.Close();

            }
