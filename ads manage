 public bool ApproveAdvertisement(int advertiseId)
        {

                using (var con = new SqlConnection(ConfigurationManager.ConnectionStrings["connection"].ToString()))
                {
                    SqlCommand cmd = new SqlCommand("ApproveAdvertisement", con);
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@advertiseId", advertiseId);
                    //cmd.Parameters.Add(new SqlParameter("@advertiseId", SqlDbType.Int)).Value = obj.advertiseId;

                    con.Open();
                    int rowsAffected = cmd.ExecuteNonQuery();
                    con.Close();

                    return rowsAffected >= 1;
                }
 
        }

        public bool RejectAdvertisement(MyAdvertiseModel obj)
        {
            
           using (var con = new SqlConnection(ConfigurationManager.ConnectionStrings["connection"].ToString()))
                {
                    SqlCommand cmd = new SqlCommand("RejectAdvertisement", con);
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@advertiseId", obj.advertiseId);

                    con.Open();
                    int rowsAffected = cmd.ExecuteNonQuery();
                    con.Close();

                    return rowsAffected >= 1;
                }
        }
--------
 [HttpPost]
        public ActionResult ApproveAdvertisement( int advertiseId)
        {
            try
            {
                // RepoModel repo = new RepoModel();
                bool isApproved = repo.ApproveAdvertisement(advertiseId);

                if (isApproved != true)
                {
                    return Json(new { success = true });
                }

                else
                {
                    return Json(new { success = false });
                }
            }
            catch (Exception ex)
            {
                // Handle any exceptions that might occur during the database update
                // Log the exception for debugging and monitoring purposes
                return Json(new { success = false });
            }
        }

        [HttpPost]
        public ActionResult RejectAdvertisement(MyAdvertiseModel obj)
        {
            try
            {
                var repo = new RepoModel();
                bool isRejected = repo.RejectAdvertisement(obj);

                if (isRejected != true)
                {
                    return Json(new { success = true });
                }
                else
                {
                    return Json(new { success = false });
                }
            }
            catch (Exception ex)
            {
                // Handle any exceptions that might occur during the database update
                // Log the exception for debugging and monitoring purposes
                return Json(new { success = false });
            }
        }
----
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var approveButtons = document.querySelectorAll('.approve-button');
            approveButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    var advertiseId = button.getAttribute('data-advertise-id');
                    var statusElement = button.closest('tr').querySelector('.status-text');

                    // Make an AJAX request to the server to approve the advertisement
                    $.ajax({
                        url: '/Home/ApproveAdvertisement', // Replace with the correct URL
                        type: 'POST',
                        data: { advertiseId: advertiseId },
                        success: function (data) {
                            if (data.success) {
                                statusElement.textContent = 'Approved';
                                showToast('Item approved successfully!', 'green');
                            } else {
                                showToast('Failed to approve item!', 'red');
                            }
                        },
                        error: function () {
                            showToast('Failed to communicate with the server!', 'red');
                        }
                    });
                });
            });

            var rejectButtons = document.querySelectorAll('.reject-button');
            rejectButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    var advertiseId = button.getAttribute('data-advertise-id');
                    var statusElement = button.closest('tr').querySelector('.status-text');

                    // Make an AJAX request to the server to reject the advertisement
                    $.ajax({
                        url: '/Home/RejectAdvertisement', // Replace with the correct URL
                        type: 'POST',
                        data: { advertiseId: advertiseId },
                        success: function (data) {
                            if (data.success) {
                                statusElement.textContent = 'Rejected';
                                showToast('Item rejected successfully!', 'red');
                            } else {
                                showToast('Failed to reject item!', 'red');
                            }
                        },
                        error: function () {
                            showToast('Failed to communicate with the server!', 'red');
                        }
                    });
                });
            });

            function showToast(message, backgroundColor) {
                var toast = document.createElement('div');
                toast.textContent = message;
                toast.style.backgroundColor = backgroundColor;
                toast.style.position = 'fixed';
                toast.style.top = '10px';
                toast.style.right = '10px';
                toast.style.padding = '10px';
                toast.style.borderRadius = '5px';
                toast.style.color = 'white';
                toast.style.zIndex = '9999';

                document.body.appendChild(toast);

                setTimeout(function () {
                    document.body.removeChild(toast);
                }, 3000);
            }
        });
    </script>
 <script>
        document.addEventListener('DOMContentLoaded', function () {
            function approveOrReject(advertiseId, action) {
                // Make an AJAX request to the server to approve or reject the advertisement
                $.ajax({
                    url: '/Home/' + action + 'Advertisement',
                    type: 'POST',
                    data: { advertiseId: advertiseId },
                    success: function (data) {
                        if (data.success) {
                            showToast('Item ' + action.toLowerCase() + 'ed successfully!', 'green');
                            // Update the status text on success
                            $('.status-text[data-advertise-id="' + advertiseId + '"]').text(action);
                        } else {
                            showToast('Failed to ' + action.toLowerCase() + ' item!', 'red');
                        }
                    },
                    error: function () {
                        showToast('Failed to communicate with the server!', 'red');
                    }
                });
            }

            // Add click event listeners to approve buttons
            var approveButtons = document.querySelectorAll('.approve-button');
            approveButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    var advertiseId = button.getAttribute('data-advertise-id');
                    approveOrReject(advertiseId, 'Approve');
                });
            });

            // Add click event listeners to reject buttons
            var rejectButtons = document.querySelectorAll('.reject-button');
            rejectButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    var advertiseId = button.getAttribute('data-advertise-id');
                    approveOrReject(advertiseId, 'Reject');
                });
            });

            function showToast(message, backgroundColor) {
                var toast = document.createElement('div');
                toast.textContent = message;
                toast.style.backgroundColor = backgroundColor;
                toast.style.position = 'fixed';
                toast.style.top = '10px';
                toast.style.right = '10px';
                toast.style.padding = '10px';
                toast.style.borderRadius = '5px';
                toast.style.color = 'white';
                toast.style.zIndex = '9999';

                document.body.appendChild(toast);

                setTimeout(function () {
                    document.body.removeChild(toast);
                }, 3000);
            }
        });
    </script>
----------------------
[HttpPost]
public ActionResult ApproveAdvertisement(int advertiseId)
{
    // RepoModel repo = new RepoModel();
    bool isApproved = repo.ApproveAdvertisement(advertiseId);

    // You can handle the result here without returning JSON.
    // For example, you can redirect the user to another page or perform other actions.

    return RedirectToAction("AnotherAction"); // Example of redirection.
}

[HttpPost]
public ActionResult RejectAdvertisement(MyAdvertiseModel obj)
{
    var repo = new RepoModel();
    bool isRejected = repo.RejectAdvertisement(obj);

    // You can handle the result here without returning JSON.
    // For example, you can redirect the user to another page or perform other actions.

    return RedirectToAction("AnotherAction"); // Example of redirection.
}
