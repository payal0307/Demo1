@model IEnumerable<adddemo.Models.MyAdvertiseModel>

@{
    ViewBag.Title = "Addlist";
}

<h2>Addlist</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.AdvertiseId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.productCategoryName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AdvertiseTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AdvertiseDescription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AdvertisePrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.cityName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AdvertiseStatus)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AdvertiseApproved)
        </th>
        <th>Action</th>
    </tr>

@foreach (var item in Model) {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.AdvertiseId)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.productCategoryName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.AdvertiseTitle)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.AdvertiseDescription)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.AdvertisePrice)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.cityName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.AdvertiseStatus)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.FirstName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.AdvertiseApproved)
    </td>
    <td>
    <td>
        @Html.ActionLink("Approve", "Approve", new { @class = "btn btn-primary"}) |
        @Html.ActionLink("reject", "reject", new { @class = "btn btn-primary" }) |
        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
    </td>
</tr>
}

</table>
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data.SqlClient;

namespace adddemo.Models
{
    public class RepoModel
    {
        public List<MyAdvertiseModel> Advertises()
        {
            List<MyAdvertiseModel> myAdvertiseList = new List<MyAdvertiseModel>();

            using (var con = new SqlConnection(ConfigurationManager.ConnectionStrings["connection"].ToString()))
            {
                try
                {
                    string query = "SELECT p.AdvertiseId, p.AdvertiseTitle, p.AdvertiseDescription, a.AdvertiseStatus " +
                                    "FROM MyAdvertise p " +
                                    "INNER JOIN Users u ON p.UserId = u.UserId " +
                                    "INNER JOIN Areas a ON p.AreaId = a.AreaId";

                    SqlCommand cmd = new SqlCommand(query, con);

                    con.Open();
                    SqlDataReader reader = cmd.ExecuteReader();

                    while (reader.Read())
                    {
                        MyAdvertiseModel myAdvertise = new MyAdvertiseModel
                        {
                            AdvertiseId = Convert.ToInt32(reader["AdvertiseId"]),
                            productCategoryName=Convert.ToInt32(reader["productCategoryName"]),
                            AdvertiseTitle = Convert.ToString(reader["AdvertiseTitle"]),
                            AdvertiseDescription = Convert.ToString(reader["AdvertiseDescription"]),
                            AdvertisePrice=Convert.ToInt32(reader["AdvertisePrice"]),
                            cityName=Convert.ToInt32(reader["cityName"]),
                            AdvertiseStatus = Convert.ToBoolean(reader["AdvertiseStatus"]),
                            FirstName=Convert.ToString(reader["FirstName"]),
                            AdvertiseApproved=Convert.ToBoolean(reader["AdvertiseApproved"])

                        };

                        myAdvertiseList.Add(myAdvertise);
                    }

                    reader.Close();
                }
                catch (Exception ex)
                {
                    // Handle the exception or log the error
                    Console.WriteLine("Error: " + ex.Message);
                }
            }

            return myAdvertiseList;
        }
    }
}
namespace adddemo.Models
{
    public class MyAdvertiseModel
    {
        public int AdvertiseId { get; set; }
        public int productCategoryName { get; set; }
        public string AdvertiseTitle { get; set; }
        public string AdvertiseDescription { get; set; }
        public decimal AdvertisePrice { get; set; }
        public int cityName { get; set; }
        public bool AdvertiseStatus { get; set; }
        public string FirstName { get; set; }
        public bool AdvertiseApproved { get; set; }
    }
}
using adddemo.Models;
using System.Collections.Generic;
using System.Web.Mvc;

namespace adddemo.Controllers
{
    public class HomeController : Controller
    {
        public ActionResult Index()
        {
            return View();
        }

        public ActionResult About()
        {
            ViewBag.Message = "Your application description page.";

            return View();
        }

        public ActionResult Contact()
        {
            ViewBag.Message = "Your contact page.";
             
            return View();
        }
       
        [HttpGet]
        public ActionResult Addlist()
        {
            RepoModel repo = new RepoModel();
            List<MyAdvertiseModel> advertiseList = repo.Advertises(); // Capture the list
            return View(advertiseList); // Pass the list to the view
        }
    }
    }
 
   
